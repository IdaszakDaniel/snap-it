{"version":3,"sources":["../src/serializeSymbol.ts"],"names":["serializeSymbol","symbol","checker","name","getName","documentation","ts","displayPartsToString","getDocumentationComment","type","typeToString","getTypeOfSymbolAtLocation","valueDeclaration","required","questionToken"],"mappings":";;;;;;;AAAA;;;;;;AASO,SAASA,eAAT,CACLC,MADK,EAELC,OAFK,EAGU;AACf,SAAO;AACLC,IAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,EADD;AAELC,IAAAA,aAAa,EAAEC,EAAE,CAACC,oBAAH,CACbN,MAAM,CAACO,uBAAP,CAA+BN,OAA/B,CADa,CAFV;AAKLO,IAAAA,IAAI,EAAEP,OAAO,CAACQ,YAAR,CACJR,OAAO,CAACS,yBAAR,CAAkCV,MAAlC,EAA0CA,MAAM,CAACW,gBAAjD,CADI,CALD;AAQL;AACAC,IAAAA,QAAQ,EAAE,CAACZ,MAAM,CAACW,gBAAP,CAAwBE;AAT9B,GAAP;AAWD","sourcesContent":["import * as ts from 'typescript';\n\nexport interface TestPropsInfo {\n  name: string;\n  documentation: string;\n  type: string;\n  required: boolean;\n}\n\nexport function serializeSymbol(\n  symbol: ts.Symbol,\n  checker: ts.TypeChecker\n): TestPropsInfo {\n  return {\n    name: symbol.getName(),\n    documentation: ts.displayPartsToString(\n      symbol.getDocumentationComment(checker)\n    ),\n    type: checker.typeToString(\n      checker.getTypeOfSymbolAtLocation(symbol, symbol.valueDeclaration!)\n    ),\n    // @ts-ignore\n    required: !symbol.valueDeclaration.questionToken,\n  };\n}\n"],"file":"serializeSymbol.js"}