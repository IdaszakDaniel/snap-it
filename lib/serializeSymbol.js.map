{"version":3,"sources":["../src/serializeSymbol.ts"],"names":["serializeSymbol","symbol","checker","name","getName","documentation","ts","displayPartsToString","getDocumentationComment","type","typeToString","getTypeOfSymbolAtLocation","valueDeclaration","required","questionToken"],"mappings":";;;;;;;AAAA;;;;;;AASO,SAASA,eAAT,CAAyBC,MAAzB,EAA4CC,OAA5C,EAAoF;AACzF,SAAO;AACLC,IAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,EADD;AAELC,IAAAA,aAAa,EAAEC,EAAE,CAACC,oBAAH,CAAwBN,MAAM,CAACO,uBAAP,CAA+BN,OAA/B,CAAxB,CAFV;AAGLO,IAAAA,IAAI,EAAEP,OAAO,CAACQ,YAAR,CACJR,OAAO,CAACS,yBAAR,CAAkCV,MAAlC,EAA0CA,MAAM,CAACW,gBAAjD,CADI,CAHD;AAML;AACAC,IAAAA,QAAQ,EAAE,CAACZ,MAAM,CAACW,gBAAP,CAAwBE;AAP9B,GAAP;AASD","sourcesContent":["import * as ts from 'typescript'\n\nexport interface TestPropsInfo {\n  name: string;\n  documentation: string;\n  type: string;\n  required: boolean;\n}\n\nexport function serializeSymbol(symbol: ts.Symbol, checker: ts.TypeChecker): TestPropsInfo {\n  return {\n    name: symbol.getName(),\n    documentation: ts.displayPartsToString(symbol.getDocumentationComment(checker)),\n    type: checker.typeToString(\n      checker.getTypeOfSymbolAtLocation(symbol, symbol.valueDeclaration!)\n    ),\n    // @ts-ignore\n    required: !symbol.valueDeclaration.questionToken\n  };\n}\n"],"file":"serializeSymbol.js"}